---
description: Documents core data models and relationships for a social music streaming platform with real-time chat and synchronized events
globs: src/stores/*,src/types/*,src/libs/*,src/models/*
alwaysApply: false
---


# data-models

Core Data Models:

1. Profile Model
- Hierarchical user rank system (Admin, Mod, Senior Mod, Florida Man, VIP, Dev, Frient)
- Custom flair colors with gradient support 
- Presence tracking with activity timestamps
- Email verification status
- Silence/ban state
- Username with legacy support

2. Chat Message Model
- 24-hour message lifetime
- User attribution and timestamps
- Image attachments (max 2MB)
- Custom emoji support
- Message grouping rules
- Character limits (500)
- Rate limiting controls

3. Playlist Model 
- Cross-platform media sources (YouTube, SoundCloud, Vimeo)
- Position tracking
- Vote counts (likes, dislikes, grabs)
- Media metadata
- Platform-specific restrictions
- Duration tracking

4. Song History Model
- 2-hour rolling window
- Engagement metrics per song
- User attribution 
- Timestamp tracking
- Platform source data

5. Event Model
- Synchronized toke sessions
- Participant tracking
- Session counts
- Progress tracking
- Special date handling (4/20)

6. Waitlist Model
- Position management
- Time-based eligibility 
- Auto-join rules by rank
- Inactivity tracking
- Skip permissions

Key Relationships:
- Profiles <-> Chat Messages (authorship)
- Profiles <-> Playlists (ownership)  
- Songs <-> Feedback (likes/dislikes/grabs)
- Events <-> Participants
- Waitlist <-> Current Song

Firebase Schema:
/users/{uid}
  - rank
  - flair
  - presence
  - banned
  - silenced
  
/chats/{messageId}
  - uid
  - content
  - timestamp
  - expires

/playlists/{playlistId}
  - name
  - owner
  - songs[]
  
/songHistory/{songId}
  - title
  - source
  - votes
  - timestamp

/events/{eventId}
  - type
  - participants[]
  - progress
  - startTime

$END$