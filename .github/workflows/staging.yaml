# Does everything but deploy the code.

name: Deploy to Staging
on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install

      - name: Compile Firebase Rules from Bolt
        run: bun run compile-rules

      - name: Build
        run: bun run build
        env:
          CI: true
          VITE_FIREBASE_URL: ${{ secrets.VITE_FIREBASE_URL_STAGING }}
          VITE_FIREBASE_KEY: ${{ secrets.VITE_FIREBASE_API_KEY_STAGING }}
          VITE_FIREBASE_AUTH: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN_STAGING }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID_STAGING }}
          VITE_FIREBASE_BUCKET: ${{ secrets.VITE_FIREBASE_BUCKET_STAGING }}

      - name: Deploy to Staging
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_STAGING_SERVICE_ACCOUNT }}'
          channelId: live
          projectId: treesradio-staging
          expires: 7d
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks

      - name: Deploy Staging Rules (Database and Storage)
        run: |
          echo "Deploying rules to staging..."
          npx firebase-tools deploy --only database,storage --project treesradio-staging --token "${{ secrets.FIREBASE_CLI_TOKEN_STAGING }}"
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
        continue-on-error: true  # Don't fail staging if rules deployment fails
