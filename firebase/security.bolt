//
// TreesRadio Firebase security definitions
// Compiles with firebase-bolt
// https://www.firebase.com/docs/security/bolt/index.html
//



////////////////////////////////////////////////////////////////
// GLOBAL FUNCTIONS
////////////////////////////////////////////////////////////////
isAuth() {auth != null}
isUser(uid) { isAuth() && auth.uid == uid }

chatHasUsername(type, uid) { 
	( 
	  ( 
	    type == 'chat' && 
	    root.child('usernames/'+uid).val() != null 
	  ) 
	) || 
	( 
	  ( type != 'chat' ) 
	) }

isSendingUser(uid) { 
	( 
	  ( 
	    isUser(newData.child(uid).child('uid').val()) || 
	    isUser(data.child(uid).child('uid').val()) 
	  ) && 
	  ( 
	    newData.child(uid).child('uid').val() == uid ||
	    data.child(uid).child('uid').val() == uid
	  )
	) 
	}

hasValidatedEmail() {
  auth.token.email_verified == true
}

hasUsername(uid) {
	root.child('usernames/'+newData.child($uid).child('uid')).val() != null 
}

////////////////////////////////////////////////////////////////
// MAIN PATH
////////////////////////////////////////////////////////////////
path / {

}

path /leaderboard {
  read() {true}
  write() {false}
}

path /help {
	read() {true}
	write() {false}
}

path /patreon {
	read() {true}
	write() {false}
}

path /flairs {
	read() {true}
	write() {false}
}

path /_admin {
  read() {true}
}

path /events {
  read() {true}
}

path /events/{$uid} {
  read() {isUser($uid)}
  write() {isUser($uid)}
}

path /toke {
  read() {true}
}
path /onlineents {
	read() {true} 
}

path /backend {
  read() {true}
}

////////////////////////////////////////////////////////////////
// CHAT
////////////////////////////////////////////////////////////////

path /chat {
  read() {true}
  index() {"timestamp"}
}

path /motd {
	read() {false}
}

////////////////////////////////////////////////////////////////
// PLAYLISTS
////////////////////////////////////////////////////////////////
type Playlist {
  entries: Object,
  key: Any,
  name: String
}

path /playlists/{$uid} {
  read() {isUser($uid)}
  write() {isUser($uid) && hasValidatedEmail()}
}

////////////////////////////////////////////////////////////////
// PLAYING MEDIA
////////////////////////////////////////////////////////////////

path /playing {
  read() {true}
}

////////////////////////////////////////////////////////////////
// PRESENCE
////////////////////////////////////////////////////////////////

path /presence {
  read() {true}
}

////////////////////////////////////////////////////////////////
// USERS
////////////////////////////////////////////////////////////////
path /searches/{$uid} {
	read() {isUser($uid)}
}
path /users/{$uid} {
  read() {true}
}

path /private/{$uid} {
  read() {isUser($uid)}
  write() {isUser($uid) && hasValidatedEmail() }
}

path /user_events/{$uid} {
  read() {isUser($uid)}
  write() {isUser($uid) && hasValidatedEmail()}
}

path /moderator {
  read() {true}
}

path /bans/{$uid} {
  read() {isUser($uid)}
}

////////////////////////////////////////////////////////////////
// WAITLIST
////////////////////////////////////////////////////////////////

//type WaitlistTask {
//  channel: String,
//  thumb: String,
//  title: String,
//  uid: String,
//  url: String,
//  user: String,
//  avatar: String | Null
//}

path /waitlist {
  read() {true}
}


///////////////////////////////////////////////////////////////
// QUEUESQUEUESQUEUESQUEUESQUEUESQUEUESQUEUESQUEUESQUEUES
///////////////////////////////////////////////////////////////

// path /queues {
//   read() {false}
// }

// path /queues/chat/tasks {
//   index() {["_state"]}
// }

// path /queues/chat/tasks/{task} {
//   write() {isSendingUser()}
// }

path /ranks {
  read() {true}
}

path /ranks_settings_READ_ONLY {
  read() {true}
}

path /avatars {
  read() {true}
}

path /avatars/{$uid} {
  write() {isUser($uid) && hasValidatedEmail()}
}

path /flair_colors {
  read() {true}
}

path /flair_colors/{$uid} {
  write() {isUser($uid) && hasValidatedEmail()}
}

path /hypes {
  read() {true}
  write() {false}
}

path /songhistory {
  read() {true}
  write() {false}
}

path /hypes/{$uid} {
  read() { true }
  write() { false }
}

// Event Handlers //

path /event_bus/{$uid} {
  write() {isUser($uid) && isSendingUser($uid)}
}

// Presence //

path /presence {
  read() {true}
}

path /presence/{$uid} {
  write() {isUser($uid) && auth.token.email_verified == true}
}

// Usernames //
path /usernames {
  read() {true}
  index() { ".value" }
}

// Registration // 

path /registered/{$uid} {
  read() {isUser($uid)}
}
